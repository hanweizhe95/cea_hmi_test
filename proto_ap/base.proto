syntax = "proto3";//标明proto版本

package SRprotobuf;//包名

message Point3f  //一般用于坐标点
{
    float x=1;
	float y=2;
	float z=3;
}

message Pose3f  //一般用于动态目标物的姿态
{
    float theta=1;  //对应SfbpDynamicObject local_yaw
	float pitch=2;
	float roll=3; 
}
message Size3f   //一般用于目标物的尺寸
{
    float length=1;
	float width=2;
	float heigh=3;
}

message Color3   //暂未使用
{
	float r=1;
	float g=3;
	float b=2;
}

message Location  //对应EgoMotion
{
    Point3f pt = 1;  //自车坐标，对应EgoMotion local_pose_p
    Pose3f pose = 2;  //姿态
    float velocity = 3;  //自车速度，对应EgoMotion local_linear_velocity
    float epsangle = 4;  //方向盘角度
    float odometer = 5;  //里程计s，学习、沿途泊入的时候计算距离
    int32 index = 6;  //未使用
    int32 isMapPos = 7;  //0车身坐标系，1地图坐标系
    FloorLevel floor_level = 8;  // 所在楼层，(-1，-1)代表-1层，(-1，-2)代表-1层和-2层之间的坡道
}

message Slot
{
    Point3f b = 1;    //车位矩形四个点坐标
    Point3f c = 2;
    Point3f d = 3;
    Point3f e = 4;
    int32 attribute = 5;  //AVM车位属性，- -1：默认值，0：有占位车，1：未知空车位
    int32 id = 6;    //实时车位ID
    Point3f location = 7;    //车位中心的坐标，未赋值，大屏未使用
    int32 slot_shape = 8; //车位形状，/0默认值1左平行2右平行3左垂直4右垂直5左斜列6右斜列
    int32 charger_type = 9;  //未赋值
    int32 slot_type = 10; // 1: parkable  0: unparkable
    float theta = 11;  //车位角度，BE边和车辆X方向的夹角
    float width = 12;  //车位深度，BC边的长度
    float height = 13; //车位宽度，BE边的长度
    int32 map_slot_id = 14;  //对应地图里面的车位ID，根据车位属性显示占位车、立起地锁或锥桶
    int32 isFavor = 15;  //1:常用车位；0：普通车位，常用车位五角星显示
    repeated int32 unparkable_types = 16;  // SlotUnParkableType，不可泊车位类型
	int32 easy_get_off = 17;  // 便利下车，0:无，居中; 1:左侧便利，偏右; 2:右侧便利，偏左
    bool is_narrow_slot = 18;  // 是否窄车位, true:窄车位; false:正常车位
    int32 get_off_park_in = 19;  // 0: 默认值 1: 离车泊入可用 2: 平行车位离车泊入不可用 3: 距离过远离车泊入不可用
}

message FloorLevel {  // 所在楼层，(-1，-1)代表-1层，(-1，-2)代表-1层和-2层之间的坡道
    float startLevel = 1;
    float endLevel = 2;
}


enum SlotUnParkableType {  //不可泊车位类型
    kSlotUnParkableUnknown    = 0;  //默认
    kStandingLockInside       = 1;  //有立起地锁
    kForbidden                = 2;  //未使用
    kVehicleInside            = 3;  //未使用
    kTrafficConeInside        = 4;  //有锥桶
}

